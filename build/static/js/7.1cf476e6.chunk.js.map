{"version":3,"sources":["views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/components/Hero.tsx","views/Ifos/hooks/useGetPublicIfoData.ts","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","views/Ifos/hooks/useGetWalletIfoData.ts","components/BalanceInput/BalanceInput.tsx","views/Ifos/components/IfoCard/ContributeModal.tsx","views/Ifos/components/IfoCard/PercentageOfTotal.tsx","views/Ifos/components/IfoCard/Contribute.tsx","views/Ifos/components/IfoCard/MetaLabel.tsx","views/Ifos/components/IfoCard/BalanceInUsd.tsx","views/Ifos/components/IfoCard/Claim.tsx","views/Ifos/components/IfoCard/ActiveSkeleton.tsx","views/Ifos/components/IfoCard/InactiveSkeleton.tsx","views/Ifos/components/IfoCard/IfoCardActions.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","views/Ifos/components/IfoCard/IfoCardTime.tsx","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/Title.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/PastIfo.tsx","views/Ifos/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","hooks/useTokenBalance.ts","views/Profile/components/ApproveConfirmButtons.tsx","hooks/useApproveConfirmTransaction.ts","hooks/useAllowance.ts","utils/getTimePeriods.ts"],"names":["Wrapper","styled","div","IfoTabButtons","useRouteMatch","url","isExact","activeIndex","scale","variant","as","Link","to","Title","Heading","attrs","size","theme","colors","secondary","Blurb","Text","StyledHero","Hero","TranslateString","useI18n","Container","getStatus","currentBlock","startBlock","endBlock","useGetPublicIfoData","ifo","address","releaseBlockNumber","useState","status","blocksRemaining","secondsUntilStart","progress","secondsUntilEnd","raisingAmount","BigNumber","totalAmount","startBlockNum","endBlockNum","state","setState","useBlock","blockNumber","contract","useIfoContract","useEffect","a","makeBatchRequest","methods","call","parseInt","totalBlocks","BSC_BLOCK_TIME","fetchProgress","StyledIfoCardHeader","Flex","Name","Description","textSubtle","IfoCardHeader","ifoId","name","subTitle","mb","alignItems","src","alt","width","height","Item","Display","IfoCardDetails","publicIfoData","isOpen","setIsOpen","description","cakeToBurn","projectSiteUrl","launchDate","launchTime","saleAmount","raiseAmount","onClick","endIcon","color","my","href","target","rel","ml","style","display","times","toFixed","margin","useGetWalletIfoData","isPendingTx","offeringTokenBalance","refundingAmount","userInfo","amount","claimed","currencyAddress","account","useWeb3React","currencyContract","useERC20","allowance","useIfoAllowance","getOfferingAmount","getRefundingAmount","offeringAmount","userInfoResponse","prevState","fetchIfoData","setPendingTx","addUserContributedAmount","plus","setIsClaimed","StyledBalanceInput","Box","input","radii","default","Input","UIKitInput","TokenSymbol","BalanceInput","title","max","symbol","onChange","onSelectMax","value","props","maxDisplay","justifyContent","fontSize","num","placeholder","mr","ContributeModal","currency","onDismiss","onSuccess","setValue","raisingTokenContract","balance","getBalanceNumber","useTokenBalance","valueWithTokenDecimals","pow","useApproveConfirmTransaction","onRequiresApproval","options","response","currentAllowance","gt","onApprove","approve","ethers","constants","MaxUint256","send","from","onConfirm","deposit","toString","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","maxWidth","e","currentTarget","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","isNaN","eq","PercentageOfTotal","userAmount","percentofUserDisplay","toNumber","toLocaleString","undefined","maximumFractionDigits","Contribute","contributedBalance","toastSuccess","useToast","useModal","onPresentContributeModal","bold","textTransform","flex","pr","disabled","MetaLabel","children","minHeight","BalanceInUsd","token","priceInUsd","useGetApiPrice","hasBalance","total","minimumFractionDigits","AmountGrid","Claim","didContribute","canClaim","refundedBalance","tokenSymbol","tokenDecimals","rewardBalance","toastError","handleClaim","harvest","message","console","error","isLoading","spin","mt","ActiveSkeleton","InactiveSkeleton","IfoCardActions","isActive","UnlockButton","IfoCardProgress","primaryStep","Details","Countdown","IfoCardTime","block","countdownToUse","timeUntil","getTimePeriods","suffix","days","hours","minutes","StyledIfoCard","Card","IfoCard","id","Ribbon","variantColor","text","getRibbonComponent","ribbon","IfoCardWrapper","mediaQueries","md","isSingle","defaultProps","LaunchIfoCallout","BaseLayout","sm","List","ul","activeIfo","ifosConfig","find","Ifo","IfoCards","pt","responsive","external","inactiveIfo","filter","PastIfo","map","Ifos","path","exact","CurrentIfo","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","useTotalSupply","slowRefresh","useRefresh","totalSupply","setTotalSupply","cakeContract","getCakeContract","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","setBalance","web3","useWeb3","getBep20Contract","balanceOf","res","fetchBalance","fastRefresh","StyledApprovConfirmButtons","Button","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","ChevronBottom","ChevronDownIcon","spinnerIcon","initialState","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","reducer","actions","type","payload","noop","useReducer","dispatch","handlePreApprove","useRef","current","then","result","on","useLotteryAllowance","setAllowance","useCake","getLotteryAddress","fetchAllowance","tokenContract","spenderAddress","dependency","fetch","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","seconds","delta","timeLeft","years","months","Math","floor"],"mappings":"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","file":"static/js/7.1cf476e6.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 39px;\r\n`\r\n\r\nconst IfoTabButtons = () => {\r\n  const { url, isExact } = useRouteMatch()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          Next IFO\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          Past IFOs\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default IfoTabButtons\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport Container from 'components/layout/Container'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: #ffffff;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n  margin-bottom: 32px;\r\n`\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <Container>\r\n        <Title>{TranslateString(500, 'IFO: Initial Farm Offerings')}</Title>\r\n        <Blurb>{TranslateString(502, 'Buy new tokens with a brand new token sale model.')}</Blurb>\r\n      </Container>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import BigNumber from 'bignumber.js'\r\nimport { BSC_BLOCK_TIME } from 'config'\r\nimport { Ifo, IfoStatus } from 'config/constants/types'\r\nimport { useBlock } from 'state/hooks'\r\nimport { useIfoContract } from 'hooks/useContract'\r\nimport { useEffect, useState } from 'react'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\n\r\nexport interface PublicIfoState {\r\n  status: IfoStatus\r\n  blocksRemaining: number\r\n  secondsUntilStart: number\r\n  progress: number\r\n  secondsUntilEnd: number\r\n  raisingAmount: BigNumber\r\n  totalAmount: BigNumber\r\n  startBlockNum: number\r\n  endBlockNum: number\r\n}\r\n\r\nconst getStatus = (currentBlock: number, startBlock: number, endBlock: number): IfoStatus => {\r\n  // Add an extra check to currentBlock because it takes awhile to fetch so the initial value is 0\r\n  // making the UI change to an inaccurate status\r\n  if (currentBlock === 0) {\r\n    return 'idle'\r\n  }\r\n\r\n  if (currentBlock < startBlock) {\r\n    return 'coming_soon'\r\n  }\r\n\r\n  if (currentBlock >= startBlock && currentBlock <= endBlock) {\r\n    return 'live'\r\n  }\r\n\r\n  if (currentBlock > endBlock) {\r\n    return 'finished'\r\n  }\r\n\r\n  return 'idle'\r\n}\r\n\r\n/**\r\n * Gets all public data of an IFO\r\n */\r\nconst useGetPublicIfoData = (ifo: Ifo) => {\r\n  const { address, releaseBlockNumber } = ifo\r\n  const [state, setState] = useState<PublicIfoState>({\r\n    status: 'idle',\r\n    blocksRemaining: 0,\r\n    secondsUntilStart: 0,\r\n    progress: 5,\r\n    secondsUntilEnd: 0,\r\n    raisingAmount: new BigNumber(0),\r\n    totalAmount: new BigNumber(0),\r\n    startBlockNum: 0,\r\n    endBlockNum: 0,\r\n  })\r\n  const { blockNumber: currentBlock } = useBlock()\r\n  const contract = useIfoContract(address)\r\n\r\n  useEffect(() => {\r\n    const fetchProgress = async () => {\r\n      const [startBlock, endBlock, raisingAmount, totalAmount] = (await makeBatchRequest([\r\n        contract.methods.startBlock().call,\r\n        contract.methods.endBlock().call,\r\n        contract.methods.raisingAmount().call,\r\n        contract.methods.totalAmount().call,\r\n      ])) as [string, string, string, string]\r\n\r\n      const startBlockNum = parseInt(startBlock, 10)\r\n      const endBlockNum = parseInt(endBlock, 10)\r\n\r\n      const status = getStatus(currentBlock, startBlockNum, endBlockNum)\r\n      const totalBlocks = endBlockNum - startBlockNum\r\n      const blocksRemaining = endBlockNum - currentBlock\r\n\r\n      // Calculate the total progress until finished or until start\r\n      const progress =\r\n        currentBlock > startBlockNum\r\n          ? ((currentBlock - startBlockNum) / totalBlocks) * 100\r\n          : ((currentBlock - releaseBlockNumber) / (startBlockNum - releaseBlockNumber)) * 100\r\n\r\n      setState({\r\n        secondsUntilEnd: blocksRemaining * BSC_BLOCK_TIME,\r\n        secondsUntilStart: (startBlockNum - currentBlock) * BSC_BLOCK_TIME,\r\n        raisingAmount: new BigNumber(raisingAmount),\r\n        totalAmount: new BigNumber(totalAmount),\r\n        status,\r\n        progress,\r\n        blocksRemaining,\r\n        startBlockNum,\r\n        endBlockNum,\r\n      })\r\n    }\r\n\r\n    fetchProgress()\r\n  }, [address, currentBlock, contract, releaseBlockNumber, setState])\r\n\r\n  return state\r\n}\r\n\r\nexport default useGetPublicIfoData\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text, Flex } from '@pancakeswap-libs/uikit'\r\n\r\ninterface IfoCardHeaderProps {\r\n  ifoId: string\r\n  name: string\r\n  subTitle: string\r\n}\r\n\r\nconst StyledIfoCardHeader = styled(Flex)`\r\n  & > div {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\r\n  margin-bottom: 4px;\r\n  text-align: right;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n  text-align: right;\r\n`\r\n\r\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\r\n  return (\r\n    <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\r\n      <img src={`/images/ifos/${ifoId}.svg`} alt={ifoId} width=\"64px\" height=\"64px\" />\r\n      <div>\r\n        <Name>{name}</Name>\r\n        <Description>{subTitle}</Description>\r\n      </div>\r\n    </StyledIfoCardHeader>\r\n  )\r\n}\r\n\r\nexport default IfoCardHeader\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Text,\r\n  LinkExternal,\r\n  Link,\r\n  Box,\r\n  CardFooter,\r\n  Button,\r\n  ChevronDownIcon,\r\n  ChevronUpIcon,\r\n} from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Ifo } from 'config/constants/types'\r\nimport { PublicIfoState } from '../../hooks/useGetPublicIfoData'\r\n\r\nexport interface IfoCardDetailsProps {\r\n  ifo: Ifo\r\n  publicIfoData: PublicIfoState\r\n}\r\n\r\nconst Item = styled.div`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  display: flex;\r\n`\r\n\r\nconst Display = styled(Text)`\r\n  flex: 1;\r\n`\r\n\r\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({ ifo, publicIfoData }) => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { description, cakeToBurn, projectSiteUrl, launchDate, launchTime, saleAmount, raiseAmount } = ifo\r\n  const { raisingAmount, totalAmount } = publicIfoData\r\n  const handleToggle = () => setIsOpen(!isOpen)\r\n\r\n  return (\r\n    <CardFooter>\r\n      <Button\r\n        variant=\"text\"\r\n        onClick={handleToggle}\r\n        width=\"100%\"\r\n        endIcon={\r\n          isOpen ? <ChevronUpIcon color=\"primary\" width=\"24px\" /> : <ChevronDownIcon color=\"primary\" width=\"24px\" />\r\n        }\r\n      >\r\n        {isOpen ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')}\r\n      </Button>\r\n      {isOpen && (\r\n        <>\r\n          <Text as=\"p\" color=\"textSubtle\" my=\"24px\">\r\n            {description}\r\n          </Text>\r\n          <Box mb=\"24px\">\r\n            <Item>\r\n              <Display>{TranslateString(582, 'Launch Time')}</Display>\r\n              <Text>\r\n                {launchDate},\r\n                <Link\r\n                  href=\"https://www.timeanddate.com/worldclock/singapore/singapore\"\r\n                  target=\"blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  ml=\"4px\"\r\n                  style={{ display: 'inline' }}\r\n                >\r\n                  {launchTime}\r\n                </Link>\r\n              </Text>\r\n            </Item>\r\n            <Item>\r\n              <Display>{TranslateString(584, 'For Sale')}</Display>\r\n              <Text>{saleAmount}</Text>\r\n            </Item>\r\n            <Item>\r\n              <Display>{TranslateString(999, 'To raise (USD)')}</Display>\r\n              <Text>{raiseAmount}</Text>\r\n            </Item>\r\n            <Item>\r\n              <Display>{TranslateString(586, 'CAKE to burn (USD)')}</Display>\r\n              <Text>{cakeToBurn}</Text>\r\n            </Item>\r\n            <Item>\r\n              <Display>{TranslateString(999, 'Total raised (% of target)')}</Display>\r\n              <Text>{`${totalAmount.div(raisingAmount).times(100).toFixed(2)}%`}</Text>\r\n            </Item>\r\n          </Box>\r\n          <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\r\n            {TranslateString(412, 'View project site')}\r\n          </LinkExternal>\r\n        </>\r\n      )}\r\n    </CardFooter>\r\n  )\r\n}\r\n\r\nexport default IfoCardDetails\r\n","import { useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Ifo } from 'config/constants/types'\r\nimport { useERC20, useIfoContract } from 'hooks/useContract'\r\nimport { useIfoAllowance } from 'hooks/useAllowance'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\n\r\nexport interface UserInfo {\r\n  amount: BigNumber\r\n  claimed: boolean\r\n}\r\n\r\nexport interface WalletIfoState {\r\n  isPendingTx: boolean\r\n  offeringTokenBalance: BigNumber\r\n  refundingAmount: BigNumber\r\n  userInfo: UserInfo\r\n}\r\n\r\n/**\r\n * Gets all data from an IFO related to a wallet\r\n */\r\nconst useGetWalletIfoData = (ifo: Ifo) => {\r\n  const [state, setState] = useState<WalletIfoState>({\r\n    isPendingTx: false,\r\n    offeringTokenBalance: new BigNumber(0),\r\n    refundingAmount: new BigNumber(0),\r\n    userInfo: {\r\n      amount: new BigNumber(0),\r\n      claimed: false,\r\n    },\r\n  })\r\n\r\n  const { address, currencyAddress } = ifo\r\n  const { isPendingTx } = state\r\n\r\n  const { account } = useWeb3React()\r\n  const contract = useIfoContract(address)\r\n  const currencyContract = useERC20(currencyAddress)\r\n  const allowance = useIfoAllowance(currencyContract, address, isPendingTx)\r\n\r\n  const setPendingTx = (status: boolean) =>\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      isPendingTx: status,\r\n    }))\r\n\r\n  const addUserContributedAmount = (amount: BigNumber) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      userInfo: {\r\n        ...prevState.userInfo,\r\n        amount: prevState.userInfo.amount.plus(amount),\r\n      },\r\n    }))\r\n  }\r\n\r\n  const setIsClaimed = () => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      userInfo: {\r\n        ...prevState.userInfo,\r\n        claimed: true,\r\n      },\r\n    }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchIfoData = async () => {\r\n      const [offeringAmount, userInfoResponse, refundingAmount] = (await makeBatchRequest([\r\n        contract.methods.getOfferingAmount(account).call,\r\n        contract.methods.userInfo(account).call,\r\n        contract.methods.getRefundingAmount(account).call,\r\n      ])) as [string, UserInfo, string]\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        offeringTokenBalance: new BigNumber(offeringAmount),\r\n        refundingAmount: new BigNumber(refundingAmount),\r\n        userInfo: {\r\n          amount: new BigNumber(userInfoResponse.amount),\r\n          claimed: userInfoResponse.claimed,\r\n        },\r\n      }))\r\n    }\r\n\r\n    if (account) {\r\n      fetchIfoData()\r\n    }\r\n  }, [account, contract, setState])\r\n\r\n  return { ...state, allowance, contract, setPendingTx, addUserContributedAmount, setIsClaimed }\r\n}\r\n\r\nexport default useGetWalletIfoData\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Box, BoxProps, Flex, Input as UIKitInput, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface BalanceInputProps extends BoxProps {\r\n  title: string\r\n  max: number\r\n  symbol: string\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\r\n  value: string\r\n  onSelectMax?: () => void\r\n}\r\n\r\nconst StyledBalanceInput = styled(Box)`\r\n  background: ${({ theme }) => theme.colors.input};\r\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.2) inset;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  padding: 8px 16px;\r\n`\r\n\r\nconst Input = styled(UIKitInput)`\r\n  box-shadow: none;\r\n  flex: 1;\r\n`\r\n\r\nconst TokenSymbol = styled(Text)`\r\n  max-width: 120px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  flex: 1;\r\n`\r\n\r\nconst BalanceInput: React.FC<BalanceInputProps> = ({ title, max, symbol, onChange, onSelectMax, value, ...props }) => {\r\n  const TranslateString = useI18n()\r\n  const maxDisplay = max.toFixed(6)\r\n\r\n  return (\r\n    <StyledBalanceInput {...props}>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text fontSize=\"14px\">{title}</Text>\r\n        <Text fontSize=\"14px\">{TranslateString(999, `Balance: ${maxDisplay}`, { num: maxDisplay })}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\">\r\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\r\n        {onSelectMax && (\r\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\r\n            {TranslateString(452, 'Max')}\r\n          </Button>\r\n        )}\r\n        <TokenSymbol title={symbol}>{symbol}</TokenSymbol>\r\n      </Flex>\r\n    </StyledBalanceInput>\r\n  )\r\n}\r\n\r\nexport default BalanceInput\r\n","import React, { useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { Modal, LinkExternal, Box, Text } from '@pancakeswap-libs/uikit'\r\nimport BalanceInput from 'components/BalanceInput'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ApproveConfirmButtons from 'views/Profile/components/ApproveConfirmButtons'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { useERC20 } from 'hooks/useContract'\r\n\r\ninterface Props {\r\n  currency: string\r\n  contract: any\r\n  currencyAddress: string\r\n  onSuccess: (amount: BigNumber) => void\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ContributeModal: React.FC<Props> = ({ currency, contract, currencyAddress, onDismiss, onSuccess }) => {\r\n  const [value, setValue] = useState('')\r\n  const { account } = useWeb3React()\r\n  const raisingTokenContract = useERC20(currencyAddress)\r\n  const balance = getBalanceNumber(useTokenBalance(currencyAddress))\r\n  const TranslateString = useI18n()\r\n  const valueWithTokenDecimals = new BigNumber(value).times(new BigNumber(10).pow(18))\r\n  const {\r\n    isApproving,\r\n    isApproved,\r\n    isConfirmed,\r\n    isConfirming,\r\n    handleApprove,\r\n    handleConfirm,\r\n  } = useApproveConfirmTransaction({\r\n    onRequiresApproval: async () => {\r\n      try {\r\n        const response = await raisingTokenContract.methods.allowance(account, contract.options.address).call()\r\n        const currentAllowance = new BigNumber(response)\r\n        return currentAllowance.gt(0)\r\n      } catch (error) {\r\n        return false\r\n      }\r\n    },\r\n    onApprove: () => {\r\n      return raisingTokenContract.methods\r\n        .approve(contract.options.address, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n    },\r\n    onConfirm: () => {\r\n      return contract.methods.deposit(valueWithTokenDecimals.toString()).send({ from: account })\r\n    },\r\n    onSuccess: async () => {\r\n      onDismiss()\r\n      onSuccess(valueWithTokenDecimals)\r\n    },\r\n  })\r\n\r\n  return (\r\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\r\n      <Box maxWidth=\"400px\">\r\n        <BalanceInput\r\n          title={TranslateString(999, 'Contribute')}\r\n          value={value}\r\n          onChange={(e) => setValue(e.currentTarget.value)}\r\n          symbol={currency}\r\n          max={balance}\r\n          onSelectMax={() => setValue(balance.toString())}\r\n          mb=\"24px\"\r\n        />\r\n        <Text as=\"p\" mb=\"24px\">\r\n          {TranslateString(\r\n            999,\r\n            \"If you don't contribute enough LP tokens, you may not receive any IFO tokens at all and will only receive a full refund of your LP tokens.\",\r\n          )}\r\n        </Text>\r\n        <ApproveConfirmButtons\r\n          isApproveDisabled={isConfirmed || isConfirming || isApproved}\r\n          isApproving={isApproving}\r\n          isConfirmDisabled={\r\n            !isApproved || isConfirmed || valueWithTokenDecimals.isNaN() || valueWithTokenDecimals.eq(0)\r\n          }\r\n          isConfirming={isConfirming}\r\n          onApprove={handleApprove}\r\n          onConfirm={handleConfirm}\r\n        />\r\n        <LinkExternal\r\n          href=\"https://exchange.pancakeswap.finance/#/add/BNB/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\"\r\n          style={{ margin: '16px auto 0' }}\r\n        >\r\n          {`Get ${currency}`}\r\n        </LinkExternal>\r\n      </Box>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ContributeModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { UserInfo } from 'views/Ifos/hooks/useGetWalletIfoData'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface PercentageOfTotalProps {\r\n  userAmount: UserInfo['amount']\r\n  totalAmount: BigNumber\r\n}\r\n\r\nconst PercentageOfTotal: React.FC<PercentageOfTotalProps> = ({ userAmount, totalAmount }) => {\r\n  const TranslateString = useI18n()\r\n  const percentOfUserContribution = userAmount.div(totalAmount).times(100).toNumber()\r\n  const percentofUserDisplay = percentOfUserContribution.toLocaleString(undefined, { maximumFractionDigits: 5 })\r\n\r\n  return (\r\n    <Text fontSize=\"14px\" color=\"textSubtle\">\r\n      {TranslateString(999, `${percentofUserDisplay}% of total`, { num: percentofUserDisplay })}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default PercentageOfTotal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { Box, Button, Flex, Text, useModal } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Ifo } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useToast } from 'state/hooks'\r\nimport { UserInfo } from '../../hooks/useGetWalletIfoData'\r\nimport { PublicIfoState } from '../../hooks/useGetPublicIfoData'\r\nimport ContributeModal from './ContributeModal'\r\nimport PercentageOfTotal from './PercentageOfTotal'\r\n\r\ninterface ContributeProps {\r\n  ifo: Ifo\r\n  contract: Contract\r\n  userInfo: UserInfo\r\n  isPendingTx: boolean\r\n  publicIfoData: PublicIfoState\r\n  addUserContributedAmount: (amount: BigNumber) => void\r\n}\r\nconst Contribute: React.FC<ContributeProps> = ({\r\n  ifo,\r\n  contract,\r\n  userInfo,\r\n  isPendingTx,\r\n  publicIfoData,\r\n  addUserContributedAmount,\r\n}) => {\r\n  const { currency, currencyAddress } = ifo\r\n  const { totalAmount } = publicIfoData\r\n  const TranslateString = useI18n()\r\n  const contributedBalance = getBalanceNumber(userInfo.amount)\r\n  const { toastSuccess } = useToast()\r\n\r\n  const handleContributeSuccess = (amount: BigNumber) => {\r\n    toastSuccess('Success!', `You have contributed ${getBalanceNumber(amount)} CAKE-BNB LP tokens to this IFO!`)\r\n    addUserContributedAmount(amount)\r\n  }\r\n\r\n  const [onPresentContributeModal] = useModal(\r\n    <ContributeModal\r\n      currency={currency}\r\n      contract={contract}\r\n      currencyAddress={currencyAddress}\r\n      onSuccess={handleContributeSuccess}\r\n    />,\r\n    false,\r\n  )\r\n\r\n  return (\r\n    <Box>\r\n      <Flex mb=\"4px\">\r\n        <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\r\n          CAKE-BNB LP\r\n        </Text>\r\n        <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\r\n          Committed\r\n        </Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\">\r\n        <Box style={{ flex: 1 }} pr=\"8px\">\r\n          <Text bold fontSize=\"20px\">\r\n            {contributedBalance.toFixed(4)}\r\n          </Text>\r\n        </Box>\r\n        <Button onClick={onPresentContributeModal} disabled={isPendingTx}>\r\n          {TranslateString(999, 'Contribute')}\r\n        </Button>\r\n      </Flex>\r\n      <PercentageOfTotal userAmount={userInfo.amount} totalAmount={totalAmount} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Contribute\r\n","import React from 'react'\r\nimport { Box, BoxProps, Text } from '@pancakeswap-libs/uikit'\r\n\r\ntype MetaLabel = BoxProps\r\n\r\nconst MetaLabel: React.FC<BoxProps> = ({ children, ...props }) => {\r\n  return (\r\n    <Box minHeight=\"18px\" {...props}>\r\n      <Text color=\"textSubtle\" fontSize=\"12px\">\r\n        {children}\r\n      </Text>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default MetaLabel\r\n","import React from 'react'\r\nimport { useGetApiPrice } from 'state/hooks'\r\nimport MetaLabel from './MetaLabel'\r\n\r\ninterface BalanceInUsdProps {\r\n  token: string\r\n  balance: number\r\n}\r\n\r\nconst BalanceInUsd: React.FC<BalanceInUsdProps> = ({ token, balance }) => {\r\n  const priceInUsd = useGetApiPrice(token)\r\n  const hasBalance = !!priceInUsd && balance > 0\r\n  const total = priceInUsd * balance\r\n\r\n  return (\r\n    <MetaLabel>\r\n      {hasBalance && `~$${total.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`}\r\n    </MetaLabel>\r\n  )\r\n}\r\n\r\nexport default BalanceInUsd\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AutoRenewIcon, Box, Button, Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { useToast } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Ifo } from 'config/constants/types'\r\nimport { UserInfo, WalletIfoState } from '../../hooks/useGetWalletIfoData'\r\nimport BalanceInUsd from './BalanceInUsd'\r\nimport MetaLabel from './MetaLabel'\r\n\r\ninterface ClaimProps {\r\n  ifo: Ifo\r\n  contract: Contract\r\n  userInfo: UserInfo\r\n  isPendingTx: WalletIfoState['isPendingTx']\r\n  setPendingTx: (status: boolean) => void\r\n  offeringTokenBalance: WalletIfoState['offeringTokenBalance']\r\n  refundingAmount: WalletIfoState['refundingAmount']\r\n  setIsClaimed: () => void\r\n}\r\n\r\nconst AmountGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 8px;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst DISPLAY_DECIMALS = 4\r\n\r\nconst Claim: React.FC<ClaimProps> = ({\r\n  ifo,\r\n  contract,\r\n  userInfo,\r\n  isPendingTx,\r\n  setPendingTx,\r\n  offeringTokenBalance,\r\n  refundingAmount,\r\n  setIsClaimed,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWeb3React()\r\n  const didContribute = userInfo.amount.gt(0)\r\n  const canClaim = !userInfo.claimed\r\n  const contributedBalance = getBalanceNumber(userInfo.amount)\r\n  const refundedBalance = getBalanceNumber(refundingAmount).toFixed(userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS)\r\n  const { tokenSymbol, tokenDecimals } = ifo\r\n  const rewardBalance = getBalanceNumber(offeringTokenBalance, tokenDecimals)\r\n  const { toastError, toastSuccess } = useToast()\r\n\r\n  const handleClaim = async () => {\r\n    try {\r\n      setPendingTx(true)\r\n      await contract.methods.harvest().send({ from: account })\r\n      setIsClaimed()\r\n      toastSuccess('Success!', 'You have successfully claimed your rewards.')\r\n    } catch (error) {\r\n      toastError('Error', error?.message)\r\n      console.error(error)\r\n    } finally {\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AmountGrid>\r\n        <Box>\r\n          <Flex mb=\"4px\">\r\n            <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\r\n              LP Tokens\r\n            </Text>\r\n            <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\r\n              Committed\r\n            </Text>\r\n          </Flex>\r\n          <Text fontSize=\"20px\" bold color={offeringTokenBalance.gt(0) ? 'text' : 'textDisabled'}>\r\n            {contributedBalance.toFixed(userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS)}\r\n          </Text>\r\n          <MetaLabel>\r\n            {canClaim\r\n              ? TranslateString(999, `${refundedBalance} to reclaim`, { num: refundedBalance })\r\n              : TranslateString(999, `${refundedBalance} reclaimed`, { num: refundedBalance })}\r\n          </MetaLabel>\r\n        </Box>\r\n        <Box>\r\n          <Flex mb=\"4px\">\r\n            <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\r\n              {tokenSymbol}\r\n            </Text>\r\n            {!canClaim ? (\r\n              <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\r\n                Claimed\r\n              </Text>\r\n            ) : (\r\n              <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\r\n                To Claim\r\n              </Text>\r\n            )}\r\n          </Flex>\r\n          <Text fontSize=\"20px\" bold color={offeringTokenBalance.gt(0) ? 'text' : 'textDisabled'}>\r\n            {rewardBalance.toFixed(offeringTokenBalance.eq(0) ? 0 : DISPLAY_DECIMALS)}\r\n          </Text>\r\n          {canClaim && <BalanceInUsd token={tokenSymbol} balance={rewardBalance} />}\r\n        </Box>\r\n      </AmountGrid>\r\n      {didContribute ? (\r\n        <Button\r\n          onClick={handleClaim}\r\n          disabled={isPendingTx || !canClaim}\r\n          width=\"100%\"\r\n          mb=\"24px\"\r\n          isLoading={isPendingTx}\r\n          endIcon={isPendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        >\r\n          {canClaim ? TranslateString(999, 'Claim') : TranslateString(999, 'Claimed')}\r\n        </Button>\r\n      ) : (\r\n        <Button disabled width=\"100%\" mb=\"24px\">\r\n          {TranslateString(999, 'Nothing to Claim')}\r\n        </Button>\r\n      )}\r\n      <Text mt=\"4px\">{TranslateString(999, \"You'll be refunded any excess tokens when you claim\")}</Text>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Claim\r\n","import React from 'react'\r\nimport { Box, Skeleton } from '@pancakeswap-libs/uikit'\r\n\r\nconst ActiveSkeleton = () => (\r\n  <Box>\r\n    <Skeleton height=\"18px\" mb=\"4px\" width=\"30%\" />\r\n    <Skeleton height=\"48px\" mb=\"2px\" />\r\n    <Skeleton height=\"19px\" width=\"15%\" />\r\n  </Box>\r\n)\r\n\r\nexport default ActiveSkeleton\r\n","import React from 'react'\r\nimport { Box, Flex, Skeleton } from '@pancakeswap-libs/uikit'\r\n\r\nconst InactiveSkeleton = () => (\r\n  <>\r\n    <Flex mb=\"24px\">\r\n      <Box width=\"50%\" height=\"52px\">\r\n        <Skeleton height=\"18px\" mb=\"4px\" width=\"70%\" />\r\n        <Skeleton height=\"30px\" width=\"20%\" />\r\n      </Box>\r\n      <Box width=\"50%\" height=\"52px\">\r\n        <Skeleton height=\"18px\" mb=\"4px\" width=\"70%\" />\r\n        <Skeleton height=\"30px\" width=\"20%\" />\r\n      </Box>\r\n    </Flex>\r\n    <Skeleton height=\"48px\" mb=\"24px\" />\r\n    <Skeleton height=\"48px\" mt=\"4px\" />\r\n  </>\r\n)\r\n\r\nexport default InactiveSkeleton\r\n","import React from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Ifo } from 'config/constants/types'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { PublicIfoState } from 'views/Ifos/hooks/useGetPublicIfoData'\r\nimport useGetWalletIfoData from '../../hooks/useGetWalletIfoData'\r\nimport Contribute from './Contribute'\r\nimport Claim from './Claim'\r\nimport ActiveSkeleton from './ActiveSkeleton'\r\nimport InactiveSkeleton from './InactiveSkeleton'\r\n\r\nexport interface Props {\r\n  ifo: Ifo\r\n  publicIfoData: PublicIfoState\r\n}\r\n\r\nconst IfoCardActions: React.FC<Props> = ({ ifo, publicIfoData }) => {\r\n  const {\r\n    isPendingTx,\r\n    offeringTokenBalance,\r\n    refundingAmount,\r\n    userInfo,\r\n    contract,\r\n    setPendingTx,\r\n    addUserContributedAmount,\r\n    setIsClaimed,\r\n  } = useGetWalletIfoData(ifo)\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return <UnlockButton />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {ifo.isActive && publicIfoData.status === 'idle' && <ActiveSkeleton />}\r\n      {!ifo.isActive && publicIfoData.status === 'idle' && <InactiveSkeleton />}\r\n      {publicIfoData.status === 'live' && (\r\n        <Contribute\r\n          ifo={ifo}\r\n          contract={contract}\r\n          userInfo={userInfo}\r\n          isPendingTx={isPendingTx}\r\n          publicIfoData={publicIfoData}\r\n          addUserContributedAmount={addUserContributedAmount}\r\n        />\r\n      )}\r\n      {publicIfoData.status === 'finished' && (\r\n        <Claim\r\n          ifo={ifo}\r\n          contract={contract}\r\n          userInfo={userInfo}\r\n          isPendingTx={isPendingTx}\r\n          setPendingTx={setPendingTx}\r\n          offeringTokenBalance={offeringTokenBalance}\r\n          refundingAmount={refundingAmount}\r\n          setIsClaimed={setIsClaimed}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default IfoCardActions\r\n","import React from 'react'\r\nimport { Box, Progress } from '@pancakeswap-libs/uikit'\r\n\r\ninterface IfoCardProgressProps {\r\n  progress: number\r\n}\r\n\r\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => {\r\n  return (\r\n    <Box mb=\"16px\">\r\n      <Progress primaryStep={progress} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default IfoCardProgress\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Link } from '@pancakeswap-libs/uikit'\r\nimport { IfoStatus } from 'config/constants/types'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface IfoCardTimeProps {\r\n  status: IfoStatus\r\n  secondsUntilStart: number\r\n  secondsUntilEnd: number\r\n  block: number\r\n}\r\n\r\nconst Details = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 24px;\r\n  justify-content: center;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Countdown = styled.div`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n`\r\n\r\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({ status, secondsUntilStart, secondsUntilEnd, block }) => {\r\n  const TranslateString = useI18n()\r\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\r\n  const timeUntil = getTimePeriods(countdownToUse)\r\n  const suffix = status === 'coming_soon' ? 'start' : 'finish'\r\n\r\n  if (status === 'idle') {\r\n    return (\r\n      <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"24px\" height=\"24px\">\r\n        {TranslateString(656, 'Loading...')}\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Details>\r\n      <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown>\r\n      <Link href={`https://bscscan.com/block/countdown/${block}`} target=\"blank\" rel=\"noopener noreferrer\" ml=\"8px\">\r\n        (blocks)\r\n      </Link>\r\n    </Details>\r\n  )\r\n}\r\n\r\nexport default IfoCardTime\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Card, CardBody, CardRibbon } from '@pancakeswap-libs/uikit'\r\nimport { Ifo, IfoStatus } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport useGetPublicIfoData from '../../hooks/useGetPublicIfoData'\r\nimport IfoCardHeader from './IfoCardHeader'\r\nimport IfoCardDetails from './IfoCardDetails'\r\nimport IfoCardActions from './IfoCardActions'\r\nimport IfoCardProgress from './IfoCardProgress'\r\nimport IfoCardTime from './IfoCardTime'\r\n\r\nexport interface IfoCardProps {\r\n  ifo: Ifo\r\n}\r\n\r\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\r\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.svg')`};\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  padding-top: 112px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 437px;\r\n  width: 100%;\r\n`\r\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\r\n  if (status === 'coming_soon') {\r\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\r\n  }\r\n\r\n  if (status === 'live') {\r\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\r\n  const { id, name, subTitle } = ifo\r\n  const publicIfoData = useGetPublicIfoData(ifo)\r\n  const { account } = useWeb3React()\r\n  const TranslateString = useI18n()\r\n  const Ribbon = getRibbonComponent(publicIfoData.status, TranslateString)\r\n\r\n  return (\r\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={publicIfoData.status === 'live'}>\r\n      <CardBody>\r\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\r\n        {publicIfoData.status !== 'finished' && ifo.isActive && (\r\n          <>\r\n            <IfoCardProgress progress={publicIfoData.progress} />\r\n            <IfoCardTime\r\n              status={publicIfoData.status}\r\n              secondsUntilStart={publicIfoData.secondsUntilStart}\r\n              secondsUntilEnd={publicIfoData.secondsUntilEnd}\r\n              block={publicIfoData.startBlockNum}\r\n            />\r\n          </>\r\n        )}\r\n        {account ? <IfoCardActions ifo={ifo} publicIfoData={publicIfoData} /> : <UnlockButton width=\"100%\" />}\r\n      </CardBody>\r\n      <IfoCardDetails ifo={ifo} publicIfoData={publicIfoData} />\r\n    </StyledIfoCard>\r\n  )\r\n}\r\n\r\nexport default IfoCard\r\n","import styled from 'styled-components'\r\nimport { Heading } from '@pancakeswap-libs/uikit'\r\n\r\nconst Title = styled(Heading).attrs({ size: 'lg' })`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  margin-bottom: 16px;\r\n`\r\n\r\nexport default Title\r\n","import styled from 'styled-components'\r\n\r\ninterface IfoCardWrapperProps {\r\n  isSingle?: boolean\r\n}\r\n\r\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\r\n  align-items: start;\r\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 32px;\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\r\n  }\r\n`\r\n\r\nIfoCardWrapper.defaultProps = {\r\n  isSingle: false,\r\n}\r\n\r\nexport default IfoCardWrapper\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@pancakeswap-libs/uikit'\r\nimport { ifosConfig } from 'config/constants'\r\nimport useI18n from 'hooks/useI18n'\r\nimport IfoCard from './components/IfoCard'\r\nimport Title from './components/Title'\r\nimport IfoCards from './components/IfoCards'\r\n\r\nconst LaunchIfoCallout = styled(BaseLayout)`\r\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 32px;\r\n  margin: 0 auto;\r\n  padding: 32px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n`\r\n\r\nconst List = styled.ul`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n\r\n  & > li {\r\n    line-height: 1.4;\r\n    margin-bottom: 8px;\r\n  }\r\n`\r\n\r\n/**\r\n * Note: currently there should be only 1 active IFO at a time\r\n */\r\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\r\n\r\nconst Ifo = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <div>\r\n      <IfoCards isSingle>\r\n        <IfoCard ifo={activeIfo} />\r\n      </IfoCards>\r\n      <LaunchIfoCallout>\r\n        <div>\r\n          <Title as=\"h2\">{TranslateString(592, 'How to take part')}</Title>\r\n          <Heading mb=\"16px\">{TranslateString(594, 'Before Sale')}:</Heading>\r\n          <List>\r\n            <li>{TranslateString(596, 'Buy CAKE and BNB tokens')}</li>\r\n            <li>{TranslateString(598, 'Get CAKE-BNB LP tokens by adding CAKE and BNB liquidity')}</li>\r\n          </List>\r\n          <Flex mb=\"16px\">\r\n            <LinkExternal href=\"https://exchange.pancakeswap.finance/#/swap\" mr=\"16px\">\r\n              {TranslateString(1060, 'Buy CAKE')}\r\n            </LinkExternal>\r\n            <LinkExternal href=\"https://exchange.pancakeswap.finance/#/add/BNB/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\">\r\n              {TranslateString(1062, 'Get LP tokens')}\r\n            </LinkExternal>\r\n          </Flex>\r\n          <Heading mb=\"16px\">{TranslateString(600, 'During Sale')}:</Heading>\r\n          <List>\r\n            <li>{TranslateString(602, 'While the sale is live, commit your CAKE-LP tokens to buy the IFO tokens')}</li>\r\n          </List>\r\n          <Heading mb=\"16px\">{TranslateString(604, 'After Sale')}:</Heading>\r\n          <List>\r\n            <li>{TranslateString(606, 'Claim the tokens you bought, along with any unspent funds.')}</li>\r\n            <li>{TranslateString(608, 'Done!')}</li>\r\n          </List>\r\n          <Text as=\"div\" pt=\"16px\">\r\n            <Button\r\n              as=\"a\"\r\n              variant=\"secondary\"\r\n              href=\"https://docs.pancakeswap.finance/core-products/ifo-initial-farm-offering\"\r\n            >\r\n              {TranslateString(610, 'Read more')}\r\n            </Button>\r\n          </Text>\r\n        </div>\r\n        <div>\r\n          <Image src=\"/images/ifo-bunny.svg\" alt=\"ifo bunny\" width={436} height={406} responsive />\r\n          <div>\r\n            <Title as=\"h2\">{TranslateString(512, 'Want to launch your own IFO?')}</Title>\r\n            <Text mb={3}>\r\n              {TranslateString(\r\n                514,\r\n                'Launch your project with PancakeSwap, Binance Smart Chain’s most-used AMM project and liquidity provider, to bring your token directly to the most active and rapidly growing community on BSC.',\r\n              )}\r\n            </Text>\r\n            <Button\r\n              as=\"a\"\r\n              href=\"https://docs.google.com/forms/d/e/1FAIpQLScGdT5rrVMr4WOWr08pvcroSeuIOtEJf1sVdQGVdcAOqryigQ/viewform\"\r\n              external\r\n            >\r\n              {TranslateString(516, 'Apply to launch')}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </LaunchIfoCallout>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ifo\r\n","import React from 'react'\r\nimport { ifosConfig } from 'config/constants'\r\nimport { Ifo } from 'config/constants/types'\r\nimport IfoCard from './components/IfoCard'\r\nimport IfoCards from './components/IfoCards'\r\n\r\nconst inactiveIfo: Ifo[] = ifosConfig.filter((ifo) => !ifo.isActive)\r\n\r\nconst PastIfo = () => {\r\n  return (\r\n    <IfoCards>\r\n      {inactiveIfo.map((ifo) => (\r\n        <IfoCard key={ifo.id} ifo={ifo} />\r\n      ))}\r\n    </IfoCards>\r\n  )\r\n}\r\n\r\nexport default PastIfo\r\n","import React from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport Container from 'components/layout/Container'\r\nimport IfoTabButtons from './components/IfoTabButtons'\r\nimport Hero from './components/Hero'\r\nimport CurrentIfo from './CurrentIfo'\r\nimport PastIfo from './PastIfo'\r\n\r\nconst Ifos = () => {\r\n  const { path } = useRouteMatch()\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Container>\r\n        <IfoTabButtons />\r\n        <Route exact path={`${path}`}>\r\n          <CurrentIfo />\r\n        </Route>\r\n        <Route path={`${path}/history`}>\r\n          <PastIfo />\r\n        </Route>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Ifos\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\r\nimport useWeb3 from './useWeb3'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getCakeContract()\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  ChevronRightIcon,\r\n  Button as UIKitButton,\r\n  AutoRenewIcon,\r\n  ChevronDownIcon,\r\n  Box,\r\n  Flex,\r\n} from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface ApproveConfirmButtonsProps {\r\n  isApproveDisabled: boolean\r\n  isApproving: boolean\r\n  isConfirming: boolean\r\n  isConfirmDisabled: boolean\r\n  onApprove: () => void\r\n  onConfirm: () => void\r\n}\r\n\r\nconst StyledApprovConfirmButtons = styled.div`\r\n  align-items: center;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  justify-content: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: 1fr 24px 1fr;\r\n  }\r\n`\r\n\r\nconst Button = styled(UIKitButton)`\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    min-width: 160px;\r\n  }\r\n`\r\n\r\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\r\n\r\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\r\n\r\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\r\n  isApproveDisabled,\r\n  isApproving,\r\n  isConfirming,\r\n  isConfirmDisabled,\r\n  onApprove,\r\n  onConfirm,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledApprovConfirmButtons>\r\n      <Box>\r\n        <Button\r\n          disabled={isApproveDisabled}\r\n          onClick={onApprove}\r\n          endIcon={isApproving ? spinnerIcon : undefined}\r\n          isLoading={isApproving}\r\n        >\r\n          {isApproving ? TranslateString(800, 'Approving') : TranslateString(564, 'Approve')}\r\n        </Button>\r\n      </Box>\r\n      <Flex justifyContent=\"center\">\r\n        <ChevronRight />\r\n        <ChevronBottom />\r\n      </Flex>\r\n      <Box>\r\n        <Button\r\n          onClick={onConfirm}\r\n          disabled={isConfirmDisabled}\r\n          isLoading={isConfirming}\r\n          endIcon={isConfirming ? spinnerIcon : undefined}\r\n        >\r\n          {isConfirming ? TranslateString(802, 'Confirming') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </Box>\r\n    </StyledApprovConfirmButtons>\r\n  )\r\n}\r\n\r\nexport default ApproveConfirmButtons\r\n","import { useEffect, useReducer, useRef } from 'react'\r\nimport { noop } from 'lodash'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useToast } from 'state/hooks'\r\n\r\ntype Web3Payload = Record<string, unknown> | null\r\n\r\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\r\n\r\ntype Action =\r\n  | { type: 'requires_approval' }\r\n  | { type: 'approve_sending' }\r\n  | { type: 'approve_receipt'; payload: Web3Payload }\r\n  | { type: 'approve_error'; payload: Web3Payload }\r\n  | { type: 'confirm_sending' }\r\n  | { type: 'confirm_receipt'; payload: Web3Payload }\r\n  | { type: 'confirm_error'; payload: Web3Payload }\r\n\r\ninterface State {\r\n  approvalState: LoadingState\r\n  approvalReceipt: Web3Payload\r\n  approvalError: Web3Payload\r\n  confirmState: LoadingState\r\n  confirmReceipt: Web3Payload\r\n  confirmError: Web3Payload\r\n}\r\n\r\nconst initialState: State = {\r\n  approvalState: 'idle',\r\n  approvalReceipt: null,\r\n  approvalError: null,\r\n  confirmState: 'idle',\r\n  confirmReceipt: null,\r\n  confirmError: null,\r\n}\r\n\r\nconst reducer = (state: State, actions: Action): State => {\r\n  switch (actions.type) {\r\n    case 'requires_approval':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'approve_sending':\r\n      return {\r\n        ...state,\r\n        approvalState: 'loading',\r\n      }\r\n    case 'approve_receipt':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n        approvalReceipt: actions.payload,\r\n      }\r\n    case 'approve_error':\r\n      return {\r\n        ...state,\r\n        approvalState: 'fail',\r\n        approvalError: actions.payload,\r\n      }\r\n    case 'confirm_sending':\r\n      return {\r\n        ...state,\r\n        confirmState: 'loading',\r\n      }\r\n    case 'confirm_receipt':\r\n      return {\r\n        ...state,\r\n        confirmState: 'success',\r\n        confirmReceipt: actions.payload,\r\n      }\r\n    case 'confirm_error':\r\n      return {\r\n        ...state,\r\n        confirmState: 'fail',\r\n        confirmError: actions.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ntype ContractHandler = () => any\r\n\r\ninterface ApproveConfirmTransaction {\r\n  onApprove: ContractHandler\r\n  onConfirm: ContractHandler\r\n  onRequiresApproval?: () => Promise<boolean>\r\n  onSuccess: (state: State) => void\r\n}\r\n\r\nconst useApproveConfirmTransaction = ({\r\n  onApprove,\r\n  onConfirm,\r\n  onRequiresApproval,\r\n  onSuccess = noop,\r\n}: ApproveConfirmTransaction) => {\r\n  const { account } = useWeb3React()\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const handlePreApprove = useRef(onRequiresApproval)\r\n  const { toastError } = useToast()\r\n\r\n  // Check if approval is necessary, re-check if account changes\r\n  useEffect(() => {\r\n    if (account && handlePreApprove.current) {\r\n      handlePreApprove.current().then((result) => {\r\n        if (result) {\r\n          dispatch({ type: 'requires_approval' })\r\n        }\r\n      })\r\n    }\r\n  }, [account, handlePreApprove, dispatch])\r\n\r\n  return {\r\n    isApproving: state.approvalState === 'loading',\r\n    isApproved: state.approvalState === 'success',\r\n    isConfirming: state.confirmState === 'loading',\r\n    isConfirmed: state.confirmState === 'success',\r\n    approvalReceipt: state.approvalReceipt,\r\n    approvalError: state.approvalError,\r\n    confirmReceipt: state.confirmReceipt,\r\n    confirmError: state.confirmError,\r\n    handleApprove: () => {\r\n      onApprove()\r\n        .on('sending', () => {\r\n          dispatch({ type: 'approve_sending' })\r\n        })\r\n        .on('receipt', (payload: Web3Payload) => {\r\n          dispatch({ type: 'approve_receipt', payload })\r\n        })\r\n        .on('error', (error: Web3Payload) => {\r\n          dispatch({ type: 'approve_error', payload: error })\r\n          console.error('An error occurred approving transaction:', error)\r\n          toastError('An error occurred approving transaction')\r\n        })\r\n    },\r\n    handleConfirm: () => {\r\n      onConfirm()\r\n        .on('sending', () => {\r\n          dispatch({ type: 'confirm_sending' })\r\n        })\r\n        .on('receipt', (payload: Web3Payload) => {\r\n          dispatch({ type: 'confirm_receipt', payload })\r\n          onSuccess(state)\r\n        })\r\n        .on('error', (error: Web3Payload) => {\r\n          dispatch({ type: 'confirm_error', payload: error })\r\n          console.error('An error occurred confirming transaction:', error)\r\n          toastError('An error occurred confirming transaction')\r\n        })\r\n    },\r\n  }\r\n}\r\n\r\nexport default useApproveConfirmTransaction\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { getLotteryAddress } from 'utils/addressHelpers'\r\nimport { useCake } from './useContract'\r\nimport useRefresh from './useRefresh'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await cakeContract.methods.allowance(account, getLotteryAddress()).call()\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchAllowance()\r\n    }\r\n  }, [account, cakeContract, fastRefresh])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\r\n  const { account } = useWeb3React()\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n"],"sourceRoot":""}